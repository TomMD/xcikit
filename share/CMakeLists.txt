# ------------ #
# Dependencies #
# ------------ #

if (XCI_INSTALL_SHARE_DAR)
    find_package(Python3 REQUIRED)
else()
    find_package(Python3)
endif()


# ------------ #
# File List    #
# ------------ #

set(ASSETS
    fonts/Enriqueta/Enriqueta-Bold.ttf
    fonts/Enriqueta/Enriqueta-Regular.ttf
    fonts/Hack/Hack-Bold.ttf
    fonts/Hack/Hack-BoldItalic.ttf
    fonts/Hack/Hack-Italic.ttf
    fonts/Hack/Hack-Regular.ttf
    fonts/MaterialIcons/MaterialIcons-Regular.woff
    fonts/ShareTechMono/ShareTechMono-Regular.ttf
    script/sys.ys
    )


# ------------ #
# Targets      #
# ------------ #

# custom property for association of asset files with targets
# (the list should contain paths relative to share output directory)
define_property(TARGET
    PROPERTY ASSETS
    BRIEF_DOCS "asset files generated by the target"
    FULL_DOCS "the property contains list of full paths")

if (XCI_WITH_VULKAN)
    add_subdirectory(shaders)
endif()

if (NOT TARGET shaders)
    # dummy target (it's easier to create a target than adding special conditions below)
    add_custom_target(shaders ALL)
    set_property(TARGET shaders PROPERTY ASSETS)
endif()

# Copy asset files to binary dir
foreach(file ${ASSETS})
    configure_file("${file}" "${file}" COPYONLY)
endforeach()

set(output_archives)

# Create data archive: share.dar
if (Python3_Interpreter_FOUND)
    set(output_dar "share.dar")
    add_custom_command(
        OUTPUT "${output_dar}"
        DEPENDS ${ASSETS} shaders
        COMMAND Python3::Interpreter
            "${PROJECT_SOURCE_DIR}/tools/pack_assets.py" -q
            "${output_dar}"
            ${ASSETS} $<TARGET_PROPERTY:shaders,ASSETS>
        COMMAND_EXPAND_LISTS
        COMMENT "Archiving assets (DAR archive)"
        VERBATIM
    )
    if (XCI_INSTALL_SHARE_DAR)
        install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${output_dar}"
            DESTINATION share/xcikit)
    endif()
    list(APPEND output_archives ${output_dar})
endif()

# Create data archive: share.zip
if (XCI_WITH_ZIP)
    set(output_zip "share.zip")
    add_custom_command(
        OUTPUT "${output_zip}"
        DEPENDS ${ASSETS} shaders
        COMMAND
            ${CMAKE_COMMAND} -E tar cf "${output_zip}" --format=zip
            ${ASSETS} $<TARGET_PROPERTY:shaders,ASSETS>
        COMMAND_EXPAND_LISTS
        COMMENT "Archiving assets (ZIP archive)"
        VERBATIM
    )
    if (XCI_INSTALL_SHARE_ZIP)
        install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${output_zip}"
            DESTINATION share/xcikit)
    endif()
    list(APPEND output_archives ${output_zip})
endif()

add_custom_target(archives ALL DEPENDS ${output_archives})

ADD_CUSTOM_TARGET(share_symlink ALL
    COMMAND ${CMAKE_COMMAND} -E create_symlink . xcikit)

if (XCI_INSTALL_SHARE_DIR)
    install(DIRECTORY fonts DESTINATION share/xcikit)
    install(DIRECTORY script DESTINATION share/xcikit)
endif()
